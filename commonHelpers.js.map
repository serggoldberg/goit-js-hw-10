{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst btnEl = document.querySelector('.btn-start');\nconst spanValEl = document.querySelectorAll('.value');\n\nlet intervalId = null;\n\nbtnEl.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose([selectedDates]) {\n    const result = Date.now() > selectedDates;\n    btnEl.disabled = result;\n    if (result) {\n      iziToast.error({\n        title: '❌ Error',\n        message: 'Please choose a date in the future',\n        position: 'topCenter',\n      });\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nbtnEl.addEventListener('click', onClick);\nfunction onClick() {\n  let selectedDates = new Date(inputEl.value).getTime() - Date.now();\n  intervalId = setInterval(() => {\n    selectedDates -= 1000;\n    if (selectedDates < 100) {\n      clearInterval(intervalId);\n      updateTimer();\n      return;\n    }\n    const date = convertMs(selectedDates);\n    updateTimer(date);\n    btnEl.disabled = true;\n    inputEl.disabled = true;\n  }, 1000);\n}\n\nfunction updateTimer({\n  days = '00',\n  hours = '00',\n  minutes = '00',\n  seconds = '00',\n} = {}) {\n  spanValEl[0].textContent = addLeadingZero(days);\n  spanValEl[1].textContent = addLeadingZero(hours);\n  spanValEl[2].textContent = addLeadingZero(minutes);\n  spanValEl[3].textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["inputEl","btnEl","spanValEl","intervalId","options","selectedDates","result","iziToast","flatpickr","onClick","updateTimer","date","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"2FAMA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAQ,SAAS,cAAc,YAAY,EAC3CC,EAAY,SAAS,iBAAiB,QAAQ,EAEpD,IAAIC,EAAa,KAEjBF,EAAM,SAAW,GAEjB,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQ,CAACC,CAAa,EAAG,CACvB,MAAMC,EAAS,KAAK,IAAG,EAAKD,EAC5BJ,EAAM,SAAWK,EACbA,GACFC,EAAS,MAAM,CACb,MAAO,UACP,QAAS,qCACT,SAAU,WAClB,CAAO,CAEJ,CACH,EAEAC,EAAUR,EAASI,CAAO,EAE1BH,EAAM,iBAAiB,QAASQ,CAAO,EACvC,SAASA,GAAU,CACjB,IAAIJ,EAAgB,IAAI,KAAKL,EAAQ,KAAK,EAAE,QAAS,EAAG,KAAK,MAC7DG,EAAa,YAAY,IAAM,CAE7B,GADAE,GAAiB,IACbA,EAAgB,IAAK,CACvB,cAAcF,CAAU,EACxBO,IACA,MACD,CACD,MAAMC,EAAOC,EAAUP,CAAa,EACpCK,EAAYC,CAAI,EAChBV,EAAM,SAAW,GACjBD,EAAQ,SAAW,EACpB,EAAE,GAAI,CACT,CAEA,SAASU,EAAY,CACnB,KAAAG,EAAO,KACP,MAAAC,EAAQ,KACR,QAAAC,EAAU,KACV,QAAAC,EAAU,IACZ,EAAI,GAAI,CACNd,EAAU,CAAC,EAAE,YAAce,EAAeJ,CAAI,EAC9CX,EAAU,CAAC,EAAE,YAAce,EAAeH,CAAK,EAC/CZ,EAAU,CAAC,EAAE,YAAce,EAAeF,CAAO,EACjDb,EAAU,CAAC,EAAE,YAAce,EAAeD,CAAO,CACnD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}